# .env.example (English)

# ------------------------------------
# GENERAL ENVIRONMENT SETTINGS
# ------------------------------------
# Application environment (development, production, test)
NODE_ENV=development

# ------------------------------------
# BACKEND SETTINGS (packages/backend)
# ------------------------------------

# Port on which the backend server will run
BACKEND_PORT=3030

# Logging level for Pino (fatal, error, warn, info, debug, trace)
# In development mode, 'debug' can be used; for production, 'info' or 'warn'
LOG_LEVEL=debug

# --- Database Settings (SQLite) ---
# Filename for the SQLite database.
# If left empty, knexfile.js uses eckasse_dev.sqlite3 in its db/ directory.
# You can specify an absolute or relative path (relative to knexfile.js)
DB_FILENAME=./eckasse_dev.sqlite3
# Example absolute path (Windows): DB_FILENAME=C:/Users/YourUser/eckasse_data/eckasse.sqlite3
# Example absolute path (Linux/macOS): DB_FILENAME=/var/data/eckasse/eckasse.sqlite3

# --- LLM Settings (Google Gemini) ---
# Your API key for Google Gemini
# Get it here: https://aistudio.google.com/app/apikey
GEMINI_API_KEY="YOUR_GOOGLE_GEMINI_API_KEY"


# ----------------------------------------------------
# CLIENT SETTINGS (packages/client-desktop)
# ----------------------------------------------------

# Port for the React Dev Server (usually set by create-react-app, but can be specified here for reference)
# Electron main.js uses the PORT variable if it exists to determine this value
PORT=3000 # Standard port for CRA

# URL to start Electron in development mode (if different from the default localhost:PORT)
# ELECTRON_START_URL=http://localhost:3001


# ------------------------------------
# OTHER POSSIBLE SETTINGS (Examples)
# ------------------------------------

# If you have cloud functions or external services:
# CLOUD_API_URL=https://api.eck1.com/
# CLOUD_API_KEY=your_cloud_api_key

# Settings for fiscal services (if applicable)
# FISCAL_SERVICE_ENDPOINT=
# FISCAL_SERVICE_TOKEN=

# For WebSocket development, ALLOWED_ORIGINS might be needed (but your code uses simple cors())
# CORS_ALLOWED_ORIGINS=http://localhost:3000,http://localhost:3030