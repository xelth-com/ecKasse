{
  "permissions": {
    "allow": [
      "Bash(rm:*)",
      "Bash(npm install)",
      "Bash(npm run dev:backend:*)",
      "Bash(npm run dev:client:desktop:renderer:*)",
      "Bash(npm install:*)",
      "Bash(npm run migrate:backend:*)",
      "Bash(npm rebuild:*)",
      "Bash(pkill:*)",
      "Bash(true)",
      "Bash(sqlite3:*)",
      "Bash(node:*)",
      "Bash(npm uninstall:*)",
      "Bash(npx knex migrate:make:*)",
      "Bash(ls:*)",
      "Bash(npm run start:*)",
      "Bash(timeout:*)",
      "Bash(npm run:*)",
      "Bash(npx knex migrate:status:*)",
      "Bash(mv:*)",
      "Bash(npm start)",
      "Bash(curl:*)",
      "Bash(grep:*)",
      "Bash(rg:*)",
      "Bash(jq:*)",
      "Bash(npx knex migrate:rollback:*)",
      "Bash(npx knex migrate:latest:*)",
      "Bash(npx knex migrate:up:*)",
      "Bash(time node:*)",
      "Bash(find:*)",
      "WebFetch(domain:ai.google.dev)",
      "Bash(mkdir:*)",
      "Bash(git rm:*)",
      "Bash(git add:*)",
      "Bash(python3:*)",
      "Bash(cat:*)",
      "Bash(npx knex raw:*)",
      "Bash(fuser:*)",
      "Bash(ss:*)",
      "Bash(git commit:*)",
      "Bash(git restore:*)",
      "Bash(pgrep:*)",
      "Bash(cp:*)",
      "Bash(source .env)",
      "Bash(source:*)",
      "Bash(if [ -f .env ])",
      "Bash(then)",
      "Bash(if grep -q \"HIERO_OPERATOR_ID\" .env)",
      "Bash(else)",
      "Bash(fi)",
      "Bash(if grep -q \"HIERO_OPERATOR_KEY\" .env)",
      "Bash(if grep -q \"HIERO_TOPIC_ID\" .env)",
      "Bash(sed:*)",
      "Bash(chmod:*)",
      "Bash(npx knex:*)",
      "Bash(npm search:*)",
      "Bash(tree:*)",
      "Bash(touch:*)",
      "Bash(command -v:*)",
      "Bash(/dev/null)",
      "Bash(git push:*)",
      "Bash(git fetch:*)",
      "Bash(electron:*)",
      "Bash(npx electron:*)",
      "Bash(git pull:*)",
      "Bash(bash:*)",
      "Bash(npm:*)",
      "Bash(if [ -f \"*.sqlite*\" ])",
      "Bash(then echo \"DB: SQLite (dev)\")",
      "Bash(pm2 list:*)",
      "Bash([ -f package.json ])",
      "Bash(NODE_ENV=production npx knex migrate:latest --knexfile packages/core/db/knexfile.js)",
      "Bash(pm2 restart:*)",
      "Bash(pm2 status:*)",
      "Bash(pm2 logs:*)",
      "Bash(psql:*)",
      "Bash(PGPASSWORD=gK76543n2PqX5bV9zR4m psql -h localhost -p 5432 -U wms_user -d eckwms -c \"SELECT username, full_name FROM users;\")",
      "Bash(PGPASSWORD=gK76543n2PqX5bV9zR4m psql -h localhost -p 5432 -U wms_user -d eckwms -c \"SELECT id, role_name, can_manage_users FROM roles;\")",
      "Bash(PGPASSWORD=gK76543n2PqX5bV9zR4m psql -h localhost -p 5432 -U wms_user -d eckwms -c \"SELECT id, username, full_name, is_active FROM users;\")",
      "Bash(PGPASSWORD=gK76543n2PqX5bV9zR4m psql -h localhost -p 5432 -U wms_user -d eckwms -c \"SELECT id, role_name, permissions FROM roles WHERE role_name = ''admin'';\")",
      "Bash(PGPASSWORD=gK76543n2PqX5bV9zR4m psql -h localhost -p 5432 -U wms_user -d eckwms -c \"SELECT user_preferences, audit_trail FROM users WHERE username = ''admin'';\")",
      "Bash(PGPASSWORD=gK76543n2PqX5bV9zR4m psql -h localhost -p 5432 -U wms_user -d eckwms -c \"SELECT role_display_names, permissions, audit_trail FROM roles WHERE id = 1;\")",
      "Bash(pm2 startOrGracefulReload:*)",
      "Bash(pm2 stop:*)",
      "Bash(pm2 delete:*)",
      "Bash(pm2 start:*)",
      "Bash(PGPASSWORD=gK76543n2PqX5bV9zR4m psql -h localhost -p 5432 -U wms_user -d eckwms -c \"DELETE FROM users WHERE username = ''admin'' AND full_name = ''System Administrator'';\")",
      "Bash(./deploy-server.sh:*)",
      "Bash(pm2 reload:*)",
      "Bash(nginx:*)",
      "Bash(systemctl reload:*)",
      "Bash(PGPASSWORD=gK76543n2PqX5bV9zR4m psql -h localhost -p 5432 -U wms_user -d eckwms -c \"SELECT id, username, full_name, is_active FROM users WHERE username = ''admin'';\")",
      "Bash(PGPASSWORD=gK76543n2PqX5bV9zR4m psql -h localhost -p 5432 -U wms_user -d eckwms -c \"SELECT id, category_names FROM categories;\")",
      "Bash(PGPASSWORD=gK76543n2PqX5bV9zR4m psql -h localhost -p 5432 -U wms_user -d eckwms -c \"SELECT id, display_names, associated_category_unique_identifier FROM items LIMIT 3;\")",
      "Bash(kill:*)",
      "Bash(PGPASSWORD=gK76543n2PqX5bV9zR4m psql -h localhost -p 5432 -U wms_user -d eckwms -c \"SELECT column_name FROM information_schema.columns WHERE table_name = ''users'';\")",
      "Bash(NODE_ENV=production node packages/core/scripts/reset_admin_pin.js)",
      "Bash(PGPASSWORD=gK76543n2PqX5bV9zR4m psql -h localhost -p 5432 -U wms_user -d eckwms -c \"CREATE EXTENSION IF NOT EXISTS vector;\")",
      "Bash(PGPASSWORD=gK76543n2PqX5bV9zR4m psql -h localhost -p 5432 -U wms_user -d eckwms -c \"CREATE TABLE IF NOT EXISTS item_embeddings (item_id INTEGER PRIMARY KEY REFERENCES items(id) ON DELETE CASCADE, item_embedding TEXT, created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP);\")",
      "Bash(PGPASSWORD=gK76543n2PqX5bV9zR4m psql -h localhost -p 5432 -U wms_user -d eckwms -c \"SELECT id, username, full_name FROM users WHERE is_active = true;\")",
      "Bash(PGPASSWORD=gK76543n2PqX5bV9zR4m psql -h localhost -p 5432 -U wms_user -d eckwms -c \"SELECT id, role_name, permissions, length(permissions), left(permissions, 10) FROM roles WHERE id = 1;\")",
      "Bash(PGPASSWORD=gK76543n2PqX5bV9zR4m psql -h localhost -p 5432 -U wms_user -d eckwms -c \"SELECT id, role_name, permissions::text FROM roles WHERE id = 1;\")",
      "Bash(PGPASSWORD=postgres psql:*)",
      "Bash(systemctl:*)",
      "Bash(service postgresql:*)",
      "Bash(sudo systemctl start:*)",
      "Bash(sudo service:*)",
      "Bash(/tmp/update_wsl_host.sh:*)",
      "Bash(PGPASSWORD=gK76543n2PqX5bV9zR4m psql -h localhost -p 5432 -U wms_user -d eckasse -c \"SELECT display_names FROM items LIMIT 1;\")",
      "Bash(git switch:*)",
      "Bash(git merge:*)",
      "Bash(git stash:*)",
      "Bash(git checkout:*)",
      "Bash(PGPASSWORD=gK76543n2PqX5bV9zR4m psql -h 172.29.16.1 -p 5432 -U wms_user -d eckasse -c \"SELECT current_database(), current_user;\")",
      "Bash(NODE_ENV=production PG_USERNAME=wms_user PG_PASSWORD=gK76543n2PqX5bV9zR4m PG_DATABASE=eckwms PG_HOST=localhost PG_PORT=5432 npx knex migrate:latest --knexfile ./knexfile.js)",
      "Bash(PGPASSWORD=gK76543n2PqX5bV9zR4m psql -h localhost -p 5432 -U wms_user -d eckwms -c \"SELECT version();\")",
      "Bash(NODE_ENV=production DB_CLIENT=pg npx knex migrate:latest --knexfile packages/core/db/knexfile.js)",
      "Bash(echo:*)",
      "Bash(sudo nginx:*)",
      "Bash(sudo systemctl:*)",
      "Bash(./check-deployment.sh)",
      "Bash(dos2unix:*)",
      "Bash(git branch:*)",
      "Bash(./test-env-setup.sh:*)",
      "Bash(./env-check-test.sh)",
      "Bash(PGPASSWORD=gK76543n2PqX5bV9zR4m psql -h localhost -p 5432 -U wms_user -d eckwms -c \"SELECT event_type, payload FROM operational_logs WHERE payload::text LIKE ''%transaction_uuid\"\":\"\"08c95acb-09c0-41d2-90ba-9493537adb16%'' ORDER BY created_at;\")",
      "Bash(PGPASSWORD=gK76543n2PqX5bV9zR4m psql -h localhost -p 5432 -U wms_user -d eckwms -c \"CREATE TABLE IF NOT EXISTS operational_logs (\n    id SERIAL PRIMARY KEY,\n    event_type VARCHAR(50) NOT NULL,\n    user_id INTEGER,\n    payload JSONB,\n    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);\")",
      "Bash(NODE_ENV=production DB_CLIENT=pg npx knex migrate:status --knexfile packages/core/db/knexfile.js)",
      "WebFetch(domain:docs.anthropic.com)",
      "Bash(claude config list)",
      "Bash(claude update)",
      "Bash(claude migrate-installer:*)",
      "Bash(PGPASSWORD=gK76543n2PqX5bV9zR4m psql -h localhost -p 5432 -U wms_user -d eckwms -c \"ALTER TABLE active_transaction_items ADD COLUMN IF NOT EXISTS parent_transaction_item_id INTEGER REFERENCES active_transaction_items(id);\")",
      "Bash(NODE_ENV=production DB_CLIENT=pg npx knex raw \"ALTER TABLE active_transaction_items ADD COLUMN IF NOT EXISTS parent_transaction_item_id INTEGER REFERENCES active_transaction_items(id);\" --knexfile packages/core/db/knexfile.js)",
      "Bash(NODE_ENV=production DB_CLIENT=pg npx knex migrate:make add_parent_transaction_item_id --knexfile packages/core/db/knexfile.js)",
      "Bash(PGPASSWORD=gK76543n2PqX5bV9zR4m psql -h localhost -p 5432 -U wms_user -d eckwms -c \"SELECT column_name, data_type FROM information_schema.columns WHERE table_name = ''active_transaction_items'' ORDER BY ordinal_position;\")"
    ],
    "deny": [],
    "defaultMode": "acceptEdits"
  }
}