{
  "permissions": {
    "allow": [
      "Bash(rm:*)",
      "Bash(npm install)",
      "Bash(npm run dev:backend:*)",
      "Bash(npm run dev:client:desktop:renderer:*)",
      "Bash(npm install:*)",
      "Bash(npm run migrate:backend:*)",
      "Bash(npm rebuild:*)",
      "Bash(pkill:*)",
      "Bash(true)",
      "Bash(sqlite3:*)",
      "Bash(node:*)",
      "Bash(npm uninstall:*)",
      "Bash(npx knex migrate:make:*)",
      "Bash(ls:*)",
      "Bash(npm run start:*)",
      "Bash(timeout:*)",
      "Bash(npm run:*)",
      "Bash(npx knex migrate:status:*)",
      "Bash(mv:*)",
      "Bash(npm start)",
      "Bash(curl:*)",
      "Bash(grep:*)",
      "Bash(rg:*)",
      "Bash(jq:*)",
      "Bash(npx knex migrate:rollback:*)",
      "Bash(npx knex migrate:latest:*)",
      "Bash(npx knex migrate:up:*)",
      "Bash(time node:*)",
      "Bash(find:*)",
      "WebFetch(domain:ai.google.dev)",
      "Bash(mkdir:*)",
      "Bash(git rm:*)",
      "Bash(git add:*)",
      "Bash(python3:*)",
      "Bash(cat:*)",
      "Bash(npx knex raw:*)",
      "Bash(fuser:*)",
      "Bash(ss:*)",
      "Bash(git commit:*)",
      "Bash(git restore:*)",
      "Bash(pgrep:*)",
      "Bash(cp:*)",
      "Bash(source .env)",
      "Bash(source:*)",
      "Bash(if [ -f .env ])",
      "Bash(then)",
      "Bash(if grep -q \"HIERO_OPERATOR_ID\" .env)",
      "Bash(else)",
      "Bash(fi)",
      "Bash(if grep -q \"HIERO_OPERATOR_KEY\" .env)",
      "Bash(if grep -q \"HIERO_TOPIC_ID\" .env)",
      "Bash(sed:*)",
      "Bash(chmod:*)",
      "Bash(npx knex:*)",
      "Bash(npm search:*)",
      "Bash(tree:*)",
      "Bash(touch:*)",
      "Bash(command -v:*)",
      "Bash(/dev/null)",
      "Bash(git push:*)",
      "Bash(git fetch:*)",
      "Bash(electron:*)",
      "Bash(npx electron:*)",
      "Bash(git pull:*)",
      "Bash(bash:*)",
      "Bash(npm:*)",
      "Bash(if [ -f \"*.sqlite*\" ])",
      "Bash(then echo \"DB: SQLite (dev)\")",
      "Bash(pm2 list:*)",
      "Bash([ -f package.json ])",
      "Bash(NODE_ENV=production npx knex migrate:latest --knexfile packages/core/db/knexfile.js)",
      "Bash(pm2 restart:*)",
      "Bash(pm2 status:*)",
      "Bash(pm2 logs:*)",
      "Bash(psql:*)",
      "Bash(PGPASSWORD=gK76543n2PqX5bV9zR4m psql -h localhost -p 5432 -U wms_user -d eckwms -c \"SELECT username, full_name FROM users;\")",
      "Bash(PGPASSWORD=gK76543n2PqX5bV9zR4m psql -h localhost -p 5432 -U wms_user -d eckwms -c \"SELECT id, role_name, can_manage_users FROM roles;\")",
      "Bash(PGPASSWORD=gK76543n2PqX5bV9zR4m psql -h localhost -p 5432 -U wms_user -d eckwms -c \"SELECT id, username, full_name, is_active FROM users;\")",
      "Bash(PGPASSWORD=gK76543n2PqX5bV9zR4m psql -h localhost -p 5432 -U wms_user -d eckwms -c \"SELECT id, role_name, permissions FROM roles WHERE role_name = ''admin'';\")",
      "Bash(PGPASSWORD=gK76543n2PqX5bV9zR4m psql -h localhost -p 5432 -U wms_user -d eckwms -c \"SELECT user_preferences, audit_trail FROM users WHERE username = ''admin'';\")",
      "Bash(PGPASSWORD=gK76543n2PqX5bV9zR4m psql -h localhost -p 5432 -U wms_user -d eckwms -c \"SELECT role_display_names, permissions, audit_trail FROM roles WHERE id = 1;\")",
      "Bash(pm2 startOrGracefulReload:*)",
      "Bash(pm2 stop:*)",
      "Bash(pm2 delete:*)",
      "Bash(pm2 start:*)",
      "Bash(PGPASSWORD=gK76543n2PqX5bV9zR4m psql -h localhost -p 5432 -U wms_user -d eckwms -c \"DELETE FROM users WHERE username = ''admin'' AND full_name = ''System Administrator'';\")"
    ],
    "deny": [],
    "defaultMode": "acceptEdits"
  }
}