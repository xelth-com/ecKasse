#!/usr/bin/env node

/**
 * Test LLM createProduct integration
 */

require('dotenv').config({ path: '../../.env' });

async function testLLMCreateProduct() {
    console.log('üß™ Testing LLM createProduct integration...');
    
    try {
        const { sendMessage } = require('./src/services/llm.service.js');
        
        // Test Russian command
        const query = "—Å–æ–∑–¥–∞–π —Ç–æ–≤–∞—Ä '–ö–∞–ø—É—á–∏–Ω–æ –¢–µ—Å—Ç' —Ü–µ–Ω–∞ 4.50 –∫–∞—Ç–µ–≥–æ—Ä–∏—è 'Getr√§nke'";
        console.log(`Query: "${query}"`);
        
        console.log('‚è±Ô∏è Sending request to LLM agent (timeout: 45s)...');
        
        const timeout = setTimeout(() => {
            console.log('‚è±Ô∏è Request timed out after 45 seconds');
            process.exit(1);
        }, 45000);
        
        const response = await sendMessage(query, []);
        clearTimeout(timeout);
        
        console.log(`\nüìù Agent Response: ${response.text}`);
        
        // Check for success indicators
        const responseText = response.text.toLowerCase();
        const hasSuccessIndicators = responseText.includes('—Å–æ–∑–¥–∞–Ω') || 
                                   responseText.includes('–¥–æ–±–∞–≤–ª–µ–Ω') ||
                                   responseText.includes('—É—Å–ø–µ—à–Ω–æ') ||
                                   responseText.includes('–∫–∞–ø—É—á–∏–Ω–æ') ||
                                   responseText.includes('successfully') ||
                                   responseText.includes('created');
        
        console.log(`\n‚úÖ Test Result: ${hasSuccessIndicators ? 'PASS - Product creation detected' : 'FAIL - No success indicators'}`);
        
        if (hasSuccessIndicators) {
            console.log('üéâ LLM agent successfully created a product using real database logic!');
        } else {
            console.log('‚ùå LLM agent response does not indicate successful product creation');
        }
        
    } catch (error) {
        console.error('‚ùå LLM test failed:', error.message);
        process.exit(1);
    }
}

testLLMCreateProduct();